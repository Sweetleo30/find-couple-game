.start-page__wrapper {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.start-page {
    z-index: -2;
    min-height: 100vh;
    background: $bgStart;
}

.form_wrapper {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.btn {
    padding: rem(10) rem(25) rem(8);
    border: rem(1) solid $white;
    border-radius: rem(50);
    min-width: rem(80);
    @include adaptiveValue(font-size, 22, 16);
    text-transform: uppercase;
    color: $mainColor;
    text-decoration: none;
    background-color: $bgBody;
    box-shadow: 0 rem(4) rem(6) $green, 0 rem(1) rem(3) #00000008;
    cursor: pointer;
    user-select: none;
    appearance: none;
    touch-action: manipulation;
    vertical-align: top;
    transition: box-shadow 0.2s;
}

.btn:hover {
    transition: all 0.2s;
    box-shadow: 0 rem(7) rem(14) $green, 0 rem(3) rem(6) #00000014;
}

.btn:active {
    background-color: $green;
    border: rem(1) solid $green;
    color: $bgBody;
}

.input-group {
    position: relative;
    @include adaptiveValue(margin-bottom, 34, 24);
}

.login-input,
.password-input {
    padding: rem(10);
    border: none;
    border-radius: rem(4);
    @include adaptiveValue(font-size, 22, 16);
    color: $mainColor;
    background-color: transparent;
    outline: rem(2) solid $mainColor;
    cursor: pointer;
}

.login-label,
.password-label {
    position: absolute;
    top: 0;
    left: 0;
    @include adaptiveValue(font-size, 22, 16);
    color: $mainColor;
    transform: translate(rem(10), rem(10));
    transition: transform .25s;
}

.login-input:focus+.login-label,
.login-input:valid+.login-label,
.password-input:focus+.password-label,
.password-input:valid+.password-label {
    transform: translate(rem(10), rem(-28)) scale(.8);
    padding-inline: rem(5);
    background-color: transparent;
}

.login-input:is(:focus, :valid),
.password-input:is(:focus, :valid) {
    outline-color: $mainColor;
    box-shadow: 0 rem(7) rem(14) $green, 0 rem(3) rem(6) #00000014;
}

.setting {
    @include adaptiveValue(margin-top, 34, 24);
}

//переключатель

.level {
    position: relative;
    display: flex;
    justify-content: space-around;
    padding: 0 rem(10);
    font-size: rem(22);
    text-transform: uppercase;

    &:before {
        content: ' ';
        position: absolute;
        left: 0;
        z-index: 0;
        width: 100%;
        height: 100%;
        background: $green;
        border-radius: rem(30);
    }

    @media (max-width: $tablet) {
        font-size: rem(18);
    }

    @media (max-width: $mobile) {
        font-size: rem(16);
    }

    &__label {
        flex: 1 1 auto;
        z-index: 1;
        @include adaptiveValue(padding, 10, 8);
        text-align: center;
        cursor: pointer;
        transition: color 200ms ease-out;
        color: $brown;

        &:hover {
            color: $white;
        }
    }

    &__indicator {
        z-index: 2;
        width: rem(34);
        height: rem(34);
        position: absolute;
        top: rem(3);
        left: 0;
        border-radius: 50%;
        transition: transform 600ms cubic-bezier(.02, .94, .09, .97);
        transform: translate3d(1rem, 0, 0);

        @media (max-width: $tablet) {
            width: rem(28);
            height: rem(28);
            top: rem(4);
        }

        @media (max-width: $mobile) {
            width: rem(20);
            height: rem(20);
            top: rem(6);
        }
    }

    input#one:checked~.level__indicator {
        background: $light-green;
        transform: translate3d(rem(42), 0, 0);

        @media (max-width: $tablet) {
            transform: translate3d(rem(38), 0, 0);
        }

        @media (max-width: $mobile) {
            transform: translate3d(rem(36), 0, 0);
        }
    }

    input#two:checked~.level__indicator {
        background: $light-blue;
        transform: translate3d(rem(178), 0, 0);

        @media (max-width: $tablet) {
            transform: translate3d(rem(151), 0, 0);
        }

        @media (max-width: $mobile) {
            transform: translate3d(rem(137), 0, 0);
        }
    }

    input#three:checked~.level__indicator {
        background: $orange;
        transform: translate3d(rem(326), 0, 0);

        @media (max-width: $tablet) {
            transform: translate3d(rem(274), 0, 0);
        }

        @media (max-width: $mobile) {
            transform: translate3d(rem(247), 0, 0);
        }
    }

    input[type="radio"] {

        &:not(:checked),
        &:checked {
            display: none;
        }
    }
}